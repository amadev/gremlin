* Gremlin Database Test Tool

Gremlin helps to generate database test data.
First, inspect database and generate a YAML schema for test data generation.

$ python src/gremlin/inspect.py mysql://test:test.0.0.1/information_schema

Schema could look like:

#+BEGIN_SRC text
nova_api:
  aggregate_hosts:
    __meta__:
       count: 10
    aggregate_id: ref("aggregates", "id")
    created_at: '"2018-03-21 16:48:17"'
    host: random_name(255)
    id: auto_increment(100)
    updated_at: '"2018-03-21 16:48:17"'
  aggregates:
    __meta__:
      count: 10
    created_at: '"2018-03-21 16:48:17"'
    id: auto_increment(100)
    name: random_name(255)
    updated_at: '"2018-03-21 16:48:17"'
    uuid: random_name(36)
...
nova_cell1:
  agent_builds:
    __meta__:
      count: 10
    architecture: random_name(255)
    created_at: '"2018-03-21 16:48:17"'
    deleted: auto_increment(100)
    deleted_at: '"2018-03-21 16:48:17"'
    hypervisor: random_name(255)
    id: auto_increment(100)
    md5hash: random_name(255)
    os: random_name(255)
    updated_at: '"2018-03-21 16:48:17"'
    url: random_name(255)
    version: random_name(255)
...
#+END_SRC

Second, generate CSV data for a schema.

$ python src/gremlin/generate.py src/gremlin/schema.yaml

Csv files are saved in the .build directory <database_name>/<table_name>.csv.

Third, load the generated data into a database;

$ python src/gremlin/run.py mysql://test:test@127.0.0.1
